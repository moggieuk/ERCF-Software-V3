[ercf]

# Servo configuration  -----------------------------------------------------------------------------------------------------
servo_up_angle: {servo_up_angle}			# Default: MG90S servo: Up=30    ; SAVOX SH0255MG: Up=140
servo_down_angle: {servo_down_angle}			# Default: MG90S servo: Down=140 ; SAVOX SH0255MG: Down=30


# Gear stepper load/unload speeds ------------------------------------------------------------------------------------------
# Long moves are faster than the small ones and used for the bulk of the bowden movement. Note that you can set two fast load
# speeds depending on whether ERCF thinks it is pulling from the buffer or from the spool. It is often helpful to use a lower
# speed when pulling from the spool because more force can be applied without loosing steps.
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower for really low noise
# NOTE: Encoder cannot keep up much above 200mm/s so make sure `apply_bowden_correction` is off at high speeds!
long_moves_speed: 150			# mm/s. Conservative value is 100mm/s, Max around 300mm/s
#long_moves_speed_from_spool: 50	# mm/s. Uncomment to use a lower speed when loading from a gate for the first time (i.e. from spool)
short_moves_speed: 50			# mm/s. Conservative value is 35mm/s. Max around 100mm/s


# Logging ------------------------------------------------------------------------------------------------------------------
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer)
# Generally you can keep console logging to a minimal whilst still sending debug output to the ercf.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
log_level: 1
logfile_level: 3			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange, 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 2 shortened KlipperScreen friendly, 0 disable
startup_status: 0			# Whether to log tool to gate status on startup, 1 = summary, 2 = full, 0 = disable


# Bowden tube movement -----------------------------------------------------------------------------------------------------
# Base value for the loading length used by the auto-calibration macro. Please use a value SMALLER than the real reverse
# bowden length (by about 30-40mm). This is ONLY used during calibration, and has no impact on normal running after calibration
calibration_bowden_length: {calibration_bowden_length}
#
# If you are getting "timer too close" errors, increase the number of moves used during long loading and unloading moves
num_moves: 1				# Number of moves to make when loading or unloading bowden
#
# If enabled, the driver will "believe" the encoder reading and make correction moves to bring the filament to the desired
# end of bowden position. This is useful is you suspect slippage on high speed loading (but requires accurate encoder)
# If disabled, the gear stepper will be solely responsible for filament positioning in bowden (requires minimal friction)
apply_bowden_correction: 0
#
# When using 'apply_bowden_correction' how close in mm the correction moves will attempt to get to target (unload mirrors this value)
load_bowden_tolerance: 10.0


# Filament homing, loading and unloading controls -------------------------------------------------------------------------
# If you have a toolhead sensor for filament homing:
toolhead_homing_max: 35			# Maximum distance to advance in order to attempt to home to toolhead sensor (default 20)
toolhead_homing_step: 1.0		# Step size to use when homing to the toolhead sensor (default 1)
#
# Options without toolhead sensor (but still needed for calibration with toolhead sensor)
extruder_homing_max: 50			# Maximum distance to advance in order to attempt to home the extruder
extruder_homing_step: 2.0		# Step size to use when homing to the extruder with collision detection (default 2)
#
# For accurate homing and to avoid grinding, tune the gear stepper current reduction (Requires TMC driver)
extruder_homing_current: 40		# Percentage of gear_stepper current (10%-100%) to use when homing to extruder homing (100 to disable)
#
# To ensure no skipping during fast tip-forming moves, tune the extruder current increase (Requires TMC driver)
extruder_form_tip_current: 100		# Percentage of extruder current (100%-150%) to use when forming tip (100 to disable)
#
# How far (mm) to run gear_stepper and extruder together in sync on load and unload. This will make loading and unloading
# more reliable and will act as a "hair pulling" step on unload.  These settings are optional - use 0 to disable
# Non zero value for 'sync_load_length' will synchronize the whole homing distance if toolhead sensor is installed
sync_load_length: 10			# mm of synchronized extruder loading at entry to extruder PAUL DELETE boolean instead
sync_unload_length: 10			# mm of synchronized movement at start of bowden unloading PAUL DELETE boolean instead
#
# This is the distance of the final filament load from the homing point to the nozzle
# If homing to toolhead sensor this will be the distance from the toolhead sensor to the nozzle
# If extruder homing it will be the distance from the extruder gears (end of bowden) to the nozzle
#
# This value can be determined by manually inserting filament to your homing point (extruder gears or toolhead sensor)
# and advancing it 1-2mm at a time until it starts to extrude from the nozzle.  Subtract 1-2mm from that distance distance
# to get this value.  If you have large gaps in your purge tower, increase this value.  If you have blobs, reduce this value.
# This value will depend on your extruder, hotend and nozzle setup.
home_position_to_nozzle: 72		# E.g. Revo Voron with CW2 extruder using extruder homing (62 with toolhead sensor)
#
# Advanced and optional. If you regularly switch between sensorless and toolhead sensor or you want to optimize extruder
# unload when using toolhead sensor you can override 'home_position_to_nozzle' with these more specific values
# (Note that the difference between these two represents the extruder to sensor distance and is used as the final
# unload distance from extruder. An accurate setting can reduce tip noise/grinding on exit from extruder)
#extruder_to_nozzle: 72		# E.g. Revo Voron with CW2 extruder using extruder homing
#sensor_to_nozzle: 62		# E.g. Revo Voron with CW2 extruder using toolhead sensor homing
#
# EXPERIMENTAL: New synchronized gear/extruder movement!
# If enabled for loading or unloading extruder this will override 'sync_load_length' and 'sync_unload_length'
# If you normally run with maxed out gear stepper current consider reducing it with `sync_gear_current`
#
sync_to_extruder: 0		# Gear motor is synchronized to extruder during print
sync_load_extruder: 0		# Full extruder load leverages motor synchronization
sync_unload_extruder: 0		# Full extruder unload (except stand alone tip forming) leverages motor synchronization
sync_form_tip: 0		# Standalone tip formation (initial part of unload) also leverages motor sychronization
#
sync_gear_current: 100		# Percentage of gear_stepper current (10%-100%) to use when syncing with extruder during print



# Selector gate positions -------------------------------------------------------------------------------------------------
# The position of each gate (tool) on the selector.  See the manual for setting these values
colorselector: 2.3, 23.3, 44.3, 70.4, 91.4, 112.4, 138.5, 159.5, 180.5
#
# Optional position of the filament bypass (special version of separator block). Comment out or set to 0 to disable
#bypass_selector: 122.8	# Set to your measured position


# This group of settings collectively form the default gate map which can be updated with the `ERCF_SET_GATE_MAP` command
# or similar commands that determine gate status. They must all be the same length at the number of gates (0 .. n)
# Note that these are the defaults and will be overriden by saved values in ercf_vars.cfg.
#
#
# Whether gate has filament available (1=available, 0=empty). If not specified or commented out all gates are unknown (but available)
#gate_status: 1, 1, 1, 1, 1, 1, 1, 1, 1
#
# Similarly this specifies the material type present in the gate.  If not specified for commented out the name will be empty
#gate_material: PLA, ABS+, ABS, ABS, PLA, PLA, PETG, ABS, ABS
#
# Temperature setting for different materials for ERCF loading and ejecting.
# So the different temperature should work better for different material.
# The material name below must match the material name in gate_material list.
# If a material min temp is not listed/not found, ERCF will use "min_temp_extruder" ( defined below in "Advanced: Configurable") as default value
# Also ERCF may use variable_toolchange_temp (defined in ercf_software.cfg) to eject if it's defined as none 0.
# So set that to 0 to use material specific temperature to have more accurate temperature setting.
# If a material is not listed in above gate_material list, its min_temp_name must be comment out,
# because klipper doesn't allow config item not used
# order is not important.
# min_temp_PLA: 187
# min_temp_PETG: 195
# min_temp_PETG2: 188
# min_temp_ABS: 223
# min_temp_ABS+: 225


# Similarly this specifies the color of the filament in each gate. If not specified for commented out the color will be default
#gate_color: red, orange, yellow, green, blue, indigo, violet, ffffff, black


# The default mapping for tool to gate.  If not specified or commented out the mapping will default to Tx = Gate #x
# This must be the same length at the number of gates.
# Note that this will be overriden by a saved value in ercf_vars.cfg. ERCF_RESET_TTG_MAP will revert to these default values
#tool_to_gate_map: 0, 1, 2, 3, 4, 5, 6, 7, 8


# Options and Features ----------------------------------------------------------------------------------------------------
# Selector operation. If configured for sensorless homing ERCF can detect blocked filament path and try to recover automatically
# Sensorless still requires the physical endstop switch to be configured as the endstop on the (non intuiative) GEAR stepper
sensorless_selector: {sensorless_selector}		# 0 = use only a physical endstop, 1 = use advanced sensorless selector homing
enable_clog_detection: {clog_detection}	# 0 = disable, 1 = static length clog detection, 2 = automatic length clog detection
enable_endless_spool: {endless_spool}		# 0 = disable endless spool,  1 = enable endless spool (requires clog detection)

# If endless spool is turned on, you should define a list of EndlessSpool groups here, one entry for each gate in your ERCF
# when filament runs out on a gate, it will switch to the next gate with the same group number
# for example, if set to 1, 2, 3, 1, 2, 3, 1, 2, 3 on a 9 cart ERCF, and a runout occurs on gate #0
# the ERCF will switch to using gate #3 and then gate #6 automatically remapping the tool as it goes.
# Note that this will be overriden by a saved value in ercf_vars.cfg if modified with ERCF_ENDLESS_SPOOL_GROUPS command
#endless_spool_groups: 1, 2, 3, 1, 2, 3, 1, 2, 3                                    

# Advanced: ERCF can auto-initialize based on previous persisted state. There are 5 levels with each level bringing in
# additional state information requiring progressively less inital setup. The higher level assume that you don't touch
# ERCF while it is offline and it can come back to life exactly where it left off!  If you do touch it or get confused
# then issue an appropriate reset command (E.g. ERCF_RESET) to get state back to the defaults.
# Enabling `startup_status` is recommended if you use persisted state at level 2 and above
# Levels: 0 = start fresh every time except calibration data (the former default behavior)
#         1 = restore persisted endless spool groups
#         2 = additionally restore persisted tool-to-gate mapping
#         3 = additionally restore persisted gate status (filament availability, material and color)
#         4 = additionally restore persisted tool, gate and filament position!
persistence_level: 3


# Advanced: Configurable, but fairly fixed values ------------------------------------------------------------------------
extruder: extruder		# Name of the toolhead extruder that ERCF is using
timeout_pause: 72000		# Time out in seconds used by the ERCF_PAUSE
disable_heater: 600		# Delay in seconds after which the hotend heater is disabled in the ERCF_PAUSE state
min_temp_extruder: 200		# Used to ensure we can move the extruder and form tips
unload_buffer: 40		# Amount to reduce the fast unload so that accurate encoder unload has room to operate
load_encoder_retries: 2		# Number of times ERCF will attempt to grab the filament on initial load (max 5)
parking_distance: 23.0		# Controls how close to the gate washer the filament is parked (distance from encoder, range=12-30)
ignore_extruder_load_error: 0	# Whether the detection of successful extruder load is considered an error or warning (ignored)
delay_servo_release: 2.0	# Delay release on servo by (mm) when not using synchronous load
servo_duration: 0.2		# Duration of PWM burst sent to servo (automatically turns off)
homing_method: 0		# EXPERIMENTAL. Filament homing method if not using toolhead sensor. 0=collision detection, 1=stallguard
z_hop_height: 5			# Height in mm of z_hop move on pause or runout to avoid blob on print
z_hop_speed: 15			# mm/s Speed of z_hop move
sync_load_speed: 10		# mm/s speed of synchronized extruder load moves
sync_unload_speed: 10		# mm/s speed of synchronized extruder unload moves
nozzle_load_speed: 12		# mm/s speed of load move inside extruder from homing position to meltzone
nozzle_unload_speed: 12		# mm/s speed of unload moves inside of extruder (very initial move from meltzone is 50% of this)
filamentblock_width: 21     # mm width of a single filament block. This is used for calculating maximum travel distance of the selector. Default value 21 mm for ERCF 1.1, 23mm for TripleDecky

